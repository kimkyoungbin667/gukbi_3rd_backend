<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.animal.mapper.BoardMapper">
    <select id="getBoardList" resultType="boardListResponseDTO">
        SELECT
            b.board_idx AS boardIdx,
            b.title AS title,
            b.like_count AS likeCount,
            b.view_count AS viewCount,
            u.user_nickname AS createdByUserNickname,
            DATE_FORMAT(b.created_at, '%Y-%m-%d %H:%i:%s') AS createdAt -- 작성일 (년-월-일 시:분:초)
        FROM
            tb_board b
                JOIN tb_user u ON b.created_by_user_idx = u.user_idx
        WHERE
            b.is_deleted = 0
        ORDER BY
            b.created_at DESC -- 최신순 정렬
            LIMIT #{limit} OFFSET #{offset};
    </select>

    <select id="getBoardListCount" resultType="Integer">
        SELECT COUNT(*) AS totalCount
        FROM tb_board
        WHERE is_deleted = 0;
    </select>

    <select id="getBoardDetail" resultType="boardDetailResponseDTO">
        SELECT
            b.board_idx AS boardIdx,               -- 게시글 인덱스
            b.title AS title,                     -- 제목
            b.content AS content,                 -- 내용
            b.like_count AS likeCount,            -- 좋아요 수
            b.is_deleted AS isDeleted,            -- 삭제 여부
            DATE_FORMAT(b.created_at, '%Y-%m-%d %H:%i:%s') AS createdAt, -- 작성일 (년-월-일 시:분:초)
            b.created_by_user_idx AS createdByUserIdx, -- 작성자 인덱스
            u.user_nickname AS createdByUserNickname,  -- 작성자 닉네임
            b.view_count AS viewCount             -- 조회수
        FROM
            tb_board b
                LEFT JOIN
            tb_user u ON b.created_by_user_idx = u.user_idx
        WHERE
            b.board_idx = #{boardIdx} and b.is_deleted = 0;
    </select>

    <update id="deleteBoard" parameterType="Long">
        UPDATE tb_board
        SET is_deleted = 1
        WHERE board_idx = #{boardIdx}
    </update>

    <update id="increaseView" parameterType="Long">
        UPDATE tb_board
        SET view_count = view_count + 1
        WHERE board_idx = #{boardIdx}
    </update>

    <update id="saveEditBoard" parameterType="BoardEditResponseDTO">
        UPDATE tb_board
        SET content = #{content}, updated_by_user_idx = #{userIdx}
        WHERE board_idx = #{boardIdx}
    </update>

    <insert id="writeBoard" parameterType="BoardWriteResponseDTO">
        INSERT tb_board(
            title,
            content,
            created_by_user_idx
        )
        VALUES(
               #{title},
               #{content},
               #{userIdx}
        )
    </insert>

    <select id="getBoardComment" resultType="BoardCommentDTO" parameterType="long">
        SELECT
            c.comment_idx AS commentIdx,
            c.content AS content,
            c.author_idx AS authorIdx,
            c.parent_idx AS parentIdx,
            u.user_nickname AS authorNickname,
            u.user_profile_url AS authorProfileUrl
        FROM tb_comment c
                 LEFT JOIN tb_user u ON c.author_idx = u.user_idx
        WHERE c.board_idx = #{boardIdx}
    </select>



</mapper>