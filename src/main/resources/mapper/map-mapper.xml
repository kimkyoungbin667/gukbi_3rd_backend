<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.animal.mapper.MapMapper">

    <insert id="addWalk" parameterType="WalkAddReq" useGeneratedKeys="true" keyProperty="logId">
        insert into WALKINGLOGS
        (user_idx,
         pet_id,
         walk_name,
         walk_date,
         start_time,
         end_time,
         distance,
         duration)
        VALUES (#{userIdx},#{petId}, #{walkName}, #{walkDate}, #{startTime}, #{endTime}, #{distance}, #{duration})
    </insert>

    <insert id="addPath" parameterType="PathAddReq">
        insert into WALKINGPATHS
        (
         log_id,
         sequence,
         latitude,
         longitude)
            VALUES(#{logId}, #{sequence}, #{latitude}, #{longitude})


    </insert>

    <select id="getWalks" parameterType="Long" resultType="WalkDTO">
        select log_id,
               pet_id,
               walk_name,
               walk_date,
               start_time,
               end_time,
               distance,
               duration
        FROM walkinglogs
        WHERE user_idx = #{userIdx}
        ORDER BY walk_date DESC, start_time DESC
    </select>

    <select id="getPaths" parameterType="Long" resultType="PathDTO">
        select path_id,
               log_id,
               sequence,
               latitude,
               longitude
        FROM walkingpaths
        WHERE log_id IN (
        SELECT log_id
        FROM walkinglogs
        WHERE user_idx = #{userIdx})
        ORDER BY log_id, sequence;
    </select>

    <select id="getPetAccompanyDetails" resultType="PetAccompanyDetailsRes">
        SELECT cd.contentid, cd.contenttypeid,cd.title, cd.tel, cd.homepage, cd.firstimage, cd.firstimage2,
               cd.addr1, cd.mapx, cd.mapy, cd.overview,
               pai.relaAcdntRiskMtr, pai.acmpyTypeCd, pai.etcAcmpyInfo, pai.acmpyPsblCpam, pai.acmpyNeedMtr
        FROM pet_accompany_info pai
                 LEFT JOIN content_details cd ON pai.contentid = cd.contentid
        where pai.acmpyTypeCd != "불가능"
    </select>

    <insert id="addCategoryFavorite">
        INSERT INTO category_favorite (user_idx, id, place_name, phone, place_url, address_name, road_address_name, x, y)
        VALUES (#{userIdx}, #{id}, #{placeName}, #{phone}, #{placeUrl}, #{addressName}, #{roadAddressName}, #{x}, #{y})
    </insert>

    <select id="getFavoritesByUserIdx" resultType="CategoryFavoriteGetRes">
        SELECT
            favorite_idx,
            id,
            place_name,
            phone,
            place_url,
            address_name,
            road_address_name,
            x,
            y
        FROM category_favorite
        WHERE user_idx = #{userIdx}
    </select>

    <delete id="deleteCategoryFavorite" >
        DELETE FROM category_favorite
        WHERE user_idx = #{userIdx} AND id = #{id}
    </delete>

    <select id="getAccompanyFavorite" resultType="AccompanyFavoriteGetRes">
        SELECT cd.contentid, cd.contenttypeid,cd.title, cd.tel, cd.homepage, cd.firstimage, cd.firstimage2,
               cd.addr1, cd.mapx, cd.mapy, cd.overview,
               pai.relaAcdntRiskMtr, pai.acmpyTypeCd, pai.etcAcmpyInfo, pai.acmpyPsblCpam, pai.acmpyNeedMtr
        FROM pet_accompany_info pai
                 LEFT JOIN content_details cd ON pai.contentid = cd.contentid left join accompany_favorite af on pai.contentid = af.contentid
        where af.user_idx =#{userIdx};
    </select>

    <insert id="addAccompanyFavorite">
        insert into  accompany_favorite (user_idx,contentid)values(#{userIdx},#{contentId});
    </insert>

    <delete id="deleteAccompanyFavorite">
        DELETE FROM accompany_favorite
        WHERE user_idx = #{userIdx} AND contentid = #{contentId}
    </delete>


    <select id="getAccompanyContentId" resultType="PetAccompanyDetailsRes">
        SELECT cd.contentid, cd.contenttypeid,cd.title, cd.tel, cd.homepage, cd.firstimage, cd.firstimage2,
               cd.addr1, cd.mapx, cd.mapy, cd.overview,
               pai.relaAcdntRiskMtr, pai.acmpyTypeCd, pai.etcAcmpyInfo, pai.acmpyPsblCpam, pai.acmpyNeedMtr
        FROM pet_accompany_info pai
                 LEFT JOIN content_details cd ON pai.contentid = cd.contentid left join accompany_favorite af on pai.contentid = af.contentid
        where cd.contentid =#{contentId};
    </select>

    <select id="getCategoryContentId" resultType="CategoryFavoriteGetRes">
        SELECT
            id,
            place_name,
            phone,
            place_url,
            address_name,
            road_address_name,
            x,
            y
        FROM category_favorite
        WHERE id = #{contentId}
            LIMIT 1;
    </select>
</mapper>